//connect to the stock market API using Golang
//2019-03-16 Topic Note Team

package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
)

const postURL = ""

//JSON-to-Go: https://mholt.github.io/json-to-go/ のJSONにAPIから返ってきたStringを入力して、作成。
type AutoGenerated struct {
	Quotes []struct {
		High             string `json:"high"`
		Open             string `json:"open"`
		Bid              string `json:"bid"`
		CurrencyPairCode string `json:"currencyPairCode"`
		Ask              string `json:"ask"`
		Low              string `json:"low"`
	} `json:"quotes"`
}

func main() {
	res, err := http.Get("https://www.gaitameonline.com/rateaj/getrate")
	if err != nil {
		fmt.Println(err)
		return
	}

	defer res.Body.Close()
	execute(res)
}

func execute(res *http.Response) {
	body, err := ioutil.ReadAll(res.Body)
	if err != nil {
		fmt.Println(err)
		return
	}
	// fmt.Println(string(body))

	//JSON をパース
	jsonBytes := ([]byte)(string(body))
	data := new(AutoGenerated)
	if err := json.Unmarshal(jsonBytes, data); err != nil {
		fmt.Println("JSON Unmarshal error:", err)
		return
	}

	index := 20 //USDJPYを選択
	param := string("{\"text\":\"*" + data.Quotes[index].CurrencyPairCode + "* は現在\nBid:" + data.Quotes[index].Bid + "\nAsk:" + data.Quotes[index].Ask + "\"}")
	req, err := http.NewRequest("POST", postURL, bytes.NewBufferString(param))
	if err != nil {
		fmt.Println("ERR:" + err)
		return
	}
	req.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	response, err := http.DefaultClient.Do(req)
	if err != nil {
		fmt.Println("ERR:" + err)
		return
	}
	fmt.Println(response)

}
